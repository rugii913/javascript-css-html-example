/* 페이지 골격을 잡는 CSS */
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 80px;
  padding: 0 1rem;
}

/* cf. flex item이 두 개만 있을 때에는 .header에 jcsb 대신 item에 mlauto를 줘도 같은 UI를 볼 수 있음 */
/* .search-form { margin-left: auto; } */
.search-form {
  width: 300px;
  max-width: 60%;
  margin-right: 3rem;
}

.primary {
  padding: 1rem;
}

.secondary {
  padding: 1rem;
}

.secondary-a {
  background: #FFF;
}

.secondary-a>.info-list {
  margin-bottom: 2rem;
}

.secondary-a>.user-list {
  margin-bottom: 2rem;
}

.secondary-b {
  background: #666;
}

.secondary-b>.user-list {
  margin-bottom: 2rem;
}

.footer {
  padding: 1rem;
  text-align: center;
}

.modal {
  display: none;
  top: 80px;
}

#modal-switch:checked~.modal {
  display: flex;
}

label[for="modal-switch"] {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 1.3rem;
  right: 1rem;
  width: 40px;
  height: 40px;
  /* background-color: red; */
}

label[for="modal-switch"]:before {
  content: "🃏";
  font-size: 2rem;
}

#modal-switch:checked~label[for="modal-switch"]:before {
  background-color: dodgerblue;
}

#modal-switch,
label[for="modal-switch"]>span {
  overflow: hidden;
  position: absolute;
  /* cf. 스크린리더, SEO 등의 이유로 display:none; width: 0;을 사용하지 않았음 */
  width: 1px;
  height: 1px;
  opacity: 0;
  top: 0; /* top: 0;이 아닌 경우 크롬에서 모달이 화면 하단에 위치하는 문제 있음 */
}

@media (min-width: 1024px) {
  .page {
    display: flex;
    flex-wrap: wrap;
  }
  .header {
    width: 100%;
  }
  .menu {
    width: 100%;
  }
  .secondary {
    width: 20%;
  }
  .secondary-a {
    order: 1;
  }
  .secondary-b {
    order: 3;
  }
  .primary {
    order: 2;
    width: 60%;
  }
  .footer {
    order: 4;
    border-top: 1px solid lightgray;
    width: 100%;
  }
}

@media (min-width: 1400px) { /* 사이드바(.secondary)가 일정 크기 이상으로는 커지지 않게 하기 위함 */
  .primary {
    width: calc(100% - 600px); /* 이렇게 calc로 계산하는 방법도 가능 */
    /* 아래처럼 flex-grow를 사용할 수 있을 것 같아 보이나, 가끔 예상치 못하게 동작하는 구간이 있으므로 width를 사용하는 것이 안전 */
    /* flex: 1 1 auto; */ /* 여기서는 flex-grow: 1;, flex: auto;와 효과가 같음 */
  }
  .secondary {
    width: 300px;
  }
}
